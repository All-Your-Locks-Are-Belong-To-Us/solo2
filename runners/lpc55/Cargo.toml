# cargo-features = ["resolver"]

[package]
name = "runner"
version = "1.0.9"
authors = ["Nicolas Stalder <n@stalder.io>", "Conor Patrick <conor@solokeys.com>"]
edition = "2018"
resolver = "2"

[lib]
name = "runner"

[[bin]]
name = "runner"
path = "src/main.rs"

[dependencies]
lpc55-rtic = "0.5.7"
cortex-m-semihosting = { version = "0.3.5", optional = true }
delog = "0.1.1"
heapless = "0.6"
interchange = "0.2.0"
nb = "1"
rtt-target = { version = "0.3", optional = true, features = ["cortex-m"] }
usb-device = "0.2.3"
# usbd-hid = { version = "0.4.5", optional = true }
usbd-serial = "0.1.0"

admin-app = { git = "https://github.com/All-Your-Locks-Are-Belong-To-Us/admin-app", optional = true, rev = "16ce80d8773b37a4bd5a990f32f71eb40dc0fa74" }
apdu-dispatch = { git = "https://github.com/All-Your-Locks-Are-Belong-To-Us/apdu-dispatch", rev = "db6a9e5fed3c1d9ad62f43057ebf5e8951a11d9b" }
ctaphid-dispatch = { git = "https://github.com/All-Your-Locks-Are-Belong-To-Us/ctaphid-dispatch", rev = "7a2c086f12a3913546e347ee63dc28b18683484a" }
ctap-types = { git = "https://github.com/All-Your-Locks-Are-Belong-To-Us/ctap-types", rev = "87d003bf09fd20c2bde1a0fe58c1a2317906c1ff" }
fido-authenticator = { git = "https://github.com/All-Your-Locks-Are-Belong-To-Us/fido-authenticator", optional = true, rev = "783ebda23dc17956e44265d41eacc7a7154f7b51" }
oath-authenticator = { git = "https://github.com/All-Your-Locks-Are-Belong-To-Us/oath-authenticator", rev = "9652c56f4083d47cf232d7ef027d383084ddf42a", features = [
    "apdu-dispatch",
], optional = true }
piv-authenticator = { git = "https://github.com/solokeys/piv-authenticator", features = [
    "apdu-dispatch",
], optional = true }
trussed = { git = "https://github.com/trussed-dev/trussed" }

# board
board = { path = "board" }

# components
dispatch-fido = { path = "../../components/dispatch-fido" }
ndef-app = { path = "../../components/ndef-app", optional = true }
# NB: when using this app, need to raise trussed/clients-5
provisioner-app = { path = "../../components/provisioner-app", optional = true }
fm11nc08 = { path = "../../components/fm11nc08" }
nfc-device = { path = "../../components/nfc-device" }
usbd-ccid = { path = "../../components/usbd-ccid" }
usbd-ctaphid = { path = "../../components/usbd-ctaphid" }


# panic
panic-halt = "0.2.0"
# panic-semihosting = "0.5.6"

# storage
littlefs2 = { version = "0.3.2", features = ["c-stubs"] }

[features]
default = [
    "admin-app",
    "fido-authenticator",
    "ndef-app",
    "oath-authenticator",
    "trussed/clients-3",
]

develop = [
    "piv-authenticator",
    "no-encrypted-storage",
    "no-buttons",
    "no-reset-time-window",
    "trussed/clients-4",
]
develop-provisioner = [
    "piv-authenticator",
    "no-encrypted-storage",
    "no-buttons",
    "no-reset-time-window",
    "provisioner-app",
    "trussed/clients-5",
]
board-provisioner = [
    "no-encrypted-storage",
    "no-reset-time-window",
    "provisioner-app",
    "trussed/clients-5",
]

# Do not use encryption for the filesystem
no-encrypted-storage = []

# Check for undefined flash and write to determined value (for prince provisioning)
write-undefined-flash = []

# Use to auto-succeed every user presence check
no-buttons = ["board/no-buttons"]

# Allow resetting FIDO authenticator (and possibly others) even after 10s uptime
no-reset-time-window = ["fido-authenticator/disable-reset-time-window"]

# Format filesystem anyway
format-filesystem = []

board-lpcxpresso55 = ["board/board-lpcxpresso55"]
board-okdoe1 = ["board/board-okdoe1", "board-lpcxpresso55", "usbfs-peripheral"]
board-solo2 = ["board/board-solo2"]

log-rtt = ["rtt-target"]
log-semihosting = ["cortex-m-semihosting"]
log-serial = []

highspeed = []
usbfs-peripheral = []
serial = []
# Reconfigure the NFC chip in any case
reconfigure-nfc = []
no-clock-controller = ["board/no-clock-controller"]
enable-clock-controller-signal-pin = [
    "board/enable-clock-controller-signal-pin",
]
# very-twitchy-mouse = ["usbd-hid"]

log-all = []
log-none = []
log-info = []
log-debug = []
log-warn = []
log-error = []

# FIDO
enable-fido-2-1-pre = [
    "fido-authenticator/enable-fido-2-1-pre",
    "dispatch-fido/enable-fido-2-1-pre",
]

# patch dependencies like so to test local changes

[profile.release]
codegen-units = 1
lto = true
opt-level = "z"
incremental = false
debug = true

# Speed up crypto packages
[profile.release.package.salty]
opt-level = 2

# TODO: see which if any settings are best for p256-cortex-m4
# [profile.release.package.nisty]
# opt-level = 2
